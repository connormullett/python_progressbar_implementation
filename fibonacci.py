
'''
each new term in the fibonacci sequence is generated by adding the previous two terms
by starting with 1 and 2 the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89
find the sum of the even valued terms whose values do not exceed 4 million
'''

'''
1 + 2 = 3, 2 + 3 = 5, 3 + 5 = 8


a, b = b, a + b     

a = b
b = a + b

'''

# generate list of fibonacci numbers up to 4 million
# check if they are even
# print a number

import time
import sys


toolbar_width = 40
max_num = 4000000
toolbar_counter = max_num / toolbar_width
total = 0 

a, b = 1, 1


def progress_bar(f, *args):
    def wrapper():
        sys.stdout.write("[%s]" % (" " * toolbar_width))
        sys.stdout.flush()
        sys.stdout.write("\b" * (toolbar_width+1)) # return to start of line, after '['
        f()
        # only write when toolbar counter met
        for i in range(toolbar_width):
            sys.stdout.write("#")
            sys.stdout.flush()
        sys.stdout.write('\n')
    return wrapper 

@progress_bar
def f():
    global a, b, total
    while a <= max_num:
        if a % 2 == 0:
            total += a
        a, b = b, a + b

f()

print(total)

